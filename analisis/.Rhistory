install.packages("tidyverse")
library(janitor)
install.packages("janitor")
install.packages("ggplot2")
library(scales)
library(googledrive)
library(readxl)
library(tidyverse)
library(janitor)
library(ggplot2)
library(scales)
install.packages("tidyverse")
library(tidyverse)
library(googledrive)
library(googledrive)
library(googledrive)
install.packages("googledrive")
library(googledrive)
install.packages("googledrive")
library(googledrive)
library(readxl)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
library(googledrive)
library(readxl)
library(tidyverse)
library(janitor)
library(ggplot2)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(googledrive)
library(readxl)
library(tidyverse)
library(janitor)
install.packages("janitor")
install.packages("janitor", repos = "https://cloud.r-project.org/")
library(janitor)
library(googledrive)
library(readxl)
library(tidyverse)
library(janitor)
library(ggplot2)
library(scales)
# Descargo el archivo mediante su id de google drive
# El link de los archivos de drive tiene esta forma:
# https://docs.google.com/spreadsheets/d/1IRhvzOQkvuspQF3TAsBCI-68i8ya0_hy
# El id de esta hoja de cálculo es "1IRhvzOQkvuspQF3TAsBCI-68i8ya0_hy"
googledrive::drive_download(as_id("1IRhvzOQkvuspQF3TAsBCI-68i8ya0_hy"),
overwrite = T)
# Descargo el archivo mediante su id de google drive
# El link de los archivos de drive tiene esta forma:
# https://docs.google.com/spreadsheets/d/1IRhvzOQkvuspQF3TAsBCI-68i8ya0_hy
# El id de esta hoja de cálculo es "1IRhvzOQkvuspQF3TAsBCI-68i8ya0_hy"
googledrive::drive_download(as_id("1IRhvzOQkvuspQF3TAsBCI-68i8ya0_hy"),
overwrite = T)
# Cargo el archivo como .xlsx
datos = readxl::read_excel("Datos_LP.xlsx",
col_names = TRUE,
skip = 2)
# Ver la estructura del dataset.
str(datos)
ncol(datos)
nrow(datos)
# Modificar nombre de las columnas.
colnames(datos) = c("id", "provincia", "barrio",
"edad_jefe_hogar","años_residencia","cant_integrantes","cant_familias", "cant_varones","cant_mujeres","cant_disidentes", "menores_18", "personas_discapacidad",
"cant_dormitorios", "max_personas_dormitorio",
"certificado_renabap", "intento_desalojo", "cant_desalojos", "años_ultimo_desalojo", "tipo_tenencia", "contrato_alquiler", "costo_alquiler", "aumento_alquiler", "porcentaje_aumento_alquiler",
"origen_agua", "compra_agua_embotellada", "presion_agua", "agua_en_altura", "litros_almacenados", "posee_baño", "higiene_fuera_vivienda", "baño_compartido", "baño_descarga", "tipo_desagüe", "agua_cocina", "agua_caliente_cocina", "agua_baño", "agua_caliente_baño",
"energia_cocina_gas_natural", "energia_cocina_garrafa", "energia_cocina_electricidad", "energia_cocina_leña_carbon", "energia_cocina_sin", "energia_calefaccion_gas_natural", "energia_calefaccion_garrafa", "energia_calefaccion_electricidad", "energia_calefaccion_leña_carbon", "energia_calefaccion_sin", "energia_calefaccion_no_necesita", "ventilacion_calefaccion",
"conexion_electricidad", "tendido_electrico", "perdida_electrodomesticos_electricidad", "incendios_electricidad", "frecuencia_corte_electricidad_verano","frecuencia_corte_electricidad_invierno",
"banda_ancha", "celular_internet", "abonos_moviles", "computadoras", "telefonos",
"contrapiso", "material_piso", "material_techo", "aislamiento_techo", "material_puerta_cemento", "material_puerta_madera", "material_puerta_ceramico", "material_puerta_sin", "material_paredes_exteriores", "terminacion_exterior", "tipo_terrminacion_exterior", "terminacion_pintura", "humedad_dormitorios", "humedad_cocina", "humedad_baño", "humedad_living", "humedad_sin", "humedad_otro", "derrumbe_dormitorios", "derrumbe_cocina", "derrumbe_baño", "derrumbe_living", "derrumbe_sin", "derrumbe_otro", "trabajo_vivienda", "tipo_trabajo_vivienda",
"calle_asfaltqada", "salida_calle", "vereda_calle", "alumbrado_publico", "calificacion_arbolado", "plagas", "plagas_cucarachas", "plagas_mosquitos", "plagas_ratas",
"esparcimiento_polideportivo", "esparcimiento_natatorio", "esparcimiento_playon", "esparcimiento_futbol", "esparcimiento_ejercicio", "esparcimiento_skatepark", "esparcimiento_balneario", "esparcimiento_sin", "esparcimiento_otro", "frecuencia_esparcimiento", "verdes_placita", "verdes_plaza", "verdes_parque", "verdes_sin", "frecuencia_verdes", "frecuencia_colectivo", "frecuencia_colectivo_dispar", "acceso_bici_publica", "basurales", "cesto_cuadra", "eliminacion_residuos", "recoleccion_residuos_municipio", "riesgo_inundacion"
)
maximo_año_residencia = max(datos$años_residencia)
# Limpieza de datos.
# - Pasar valores NA a 0 (asumimos NA como ausencia del atributo).
# - Especificar ordinalidad a las categorías de una variable.
datos_limpios <- datos %>%
mutate(cant_desalojos = ifelse(is.na(cant_desalojos),0,cant_desalojos),
años_residencia = cut(años_residencia,
breaks = c(-1, 0, 1, 5, 10, 20, 40, 60, maximo_año_residencia),
labels = c("0 años (recién llegado)",
"1 año",
"2-5 años",
"6-10 años",
"11-20 años",
"21-40 años",
"41-60 años",
"61+ años"),
right = TRUE,
ordered_result = TRUE))
# Agua
# - Pasar valores NA a 'No tiene' (asumimos NA como ausencia del atributo).
datos_limpios = datos_limpios %>%
mutate ( agua_caliente_baño = case_when(
is.na(agua_caliente_baño) ~ "No tiene",
agua_caliente_baño == "No tengo agua caliente en el baño" ~ "No tiene",
agua_caliente_baño == "Si, con un calefón eléctrico" ~ "Calefón eléctrico",
agua_caliente_baño == "Si, con una ducha eléctrica" ~ "Ducha eléctrica",
agua_caliente_baño == "Si, con un termotanque a gas" ~ "Termotanque a gas",
agua_caliente_baño == "Si, con un termotanque eléctrico" ~ "Termotanque eléctrico",
))
breaks_alquiler <- seq(from = 0, to = 30000, by = 5000)
labels_alquiler <- paste0(
head(breaks_alquiler), " - ", tail(breaks_alquiler)
)
datos_limpios <- datos %>%
mutate(costo_alquiler_num = as.numeric(as.character(costo_alquiler)),
costo_alquiler = cut(costo_alquiler_num,
breaks = breaks_alquiler,
labels = labels_alquiler,
right = TRUE,
ordered_result = TRUE
)
)
cantidad_humedad_baño <- as.numeric(sum(datos$humedad_baño == "Baño", na.rm = TRUE))
cantidad_humedad_cocina <- as.numeric(sum(datos$humedad_cocina == "Cocina", na.rm = TRUE))
cantidad_humedad_dormitorios <- as.numeric(sum(datos$humedad_dormitorios == "Dormitorios", na.rm = TRUE))
cantidad_humedad_living <- as.numeric(sum(datos$humedad_living == "Living", na.rm = TRUE))
cantidad_sin_humedad <- as.numeric(sum(datos$humedad_sin == "No hay ningún problema de filtraciones/humedad", na.rm = TRUE))
cantidad_humedad_otro <- as.numeric(sum(datos$humedad_otro == "Otro", na.rm = TRUE))
datos_limpios %>%
filter(
rowSums(
!is.na(select(., humedad_cocina, humedad_living, humedad_baño, humedad_dormitorios))
) > 0
) %>% group_by(material_paredes_exteriores) %>%
summarise(cantidad_con_humedad = n()) %>%
arrange(desc(cantidad_con_humedad)) %>%
print()
# Energia Calefaccion respuesta múltiple.
datos_limpios = datos_limpios %>%
mutate (
energia_calefaccion_gas_natural = ifelse(!is.na(energia_calefaccion_gas_natural), 1, 0 ),
energia_calefaccion_electricidad = ifelse(!is.na(energia_calefaccion_electricidad), 1, 0 ),
energia_calefaccion_garrafa = ifelse(!is.na(energia_calefaccion_garrafa), 1, 0 ),
energia_calefaccion_leña_carbon = ifelse(!is.na(energia_calefaccion_leña_carbon), 1, 0 ),
energia_calefaccion_sin = ifelse(!is.na(energia_calefaccion_sin), 1, 0 ),
energia_calefaccion_no_necesita = ifelse(!is.na(energia_calefaccion_no_necesita), 1, 0 )
)
# ___________________________________________
# ___________________________________________
# VARIABLES ELEGIDAS
# ___________________________________________
# VARIABLES ELEGIDAS
# 1.4: cant_integrantes - Cuantitativa discreta.-
# ___________________________________________
# VARIABLES ELEGIDAS
# 1.4: cant_integrantes - Cuantitativa discreta.-
# 3.2: max_personas_dormitorio - Cuantitativa discreta.-
# ___________________________________________
# VARIABLES ELEGIDAS
# 1.4: cant_integrantes - Cuantitativa discreta.-
# 3.2: max_personas_dormitorio - Cuantitativa discreta.-
# 4.3: tipo_tenencia - Categórica nominal.-
# ___________________________________________
# VARIABLES ELEGIDAS
# 1.4: cant_integrantes - Cuantitativa discreta.-
# 3.2: max_personas_dormitorio - Cuantitativa discreta.-
# 4.3: tipo_tenencia - Categórica nominal.-
# 4.4.2: costo_alquiler: Cuantitativa continua (intervalo). -
# ___________________________________________
# VARIABLES ELEGIDAS
# 1.4: cant_integrantes - Cuantitativa discreta.-
# 3.2: max_personas_dormitorio - Cuantitativa discreta.-
# 4.3: tipo_tenencia - Categórica nominal.-
# 4.4.2: costo_alquiler: Cuantitativa continua (intervalo). -
# 5.3: presion_agua - Categórica ordinal.-
# ___________________________________________
# VARIABLES ELEGIDAS
# 1.4: cant_integrantes - Cuantitativa discreta.-
# 3.2: max_personas_dormitorio - Cuantitativa discreta.-
# 4.3: tipo_tenencia - Categórica nominal.-
# 4.4.2: costo_alquiler: Cuantitativa continua (intervalo). -
# 5.3: presion_agua - Categórica ordinal.-
# 5.16: agua_caliente_baño - Categórica nominal.-
# ___________________________________________
# VARIABLES ELEGIDAS
# 1.4: cant_integrantes - Cuantitativa discreta.-
# 3.2: max_personas_dormitorio - Cuantitativa discreta.-
# 4.3: tipo_tenencia - Categórica nominal.-
# 4.4.2: costo_alquiler: Cuantitativa continua (intervalo). -
# 5.3: presion_agua - Categórica ordinal.-
# 5.16: agua_caliente_baño - Categórica nominal.-
# 5.2.2: litros_almacenados - Cuantitativa continua.
# ___________________________________________
# VARIABLES ELEGIDAS
# 1.4: cant_integrantes - Cuantitativa discreta.-
# 3.2: max_personas_dormitorio - Cuantitativa discreta.-
# 4.3: tipo_tenencia - Categórica nominal.-
# 4.4.2: costo_alquiler: Cuantitativa continua (intervalo). -
# 5.3: presion_agua - Categórica ordinal.-
# 5.16: agua_caliente_baño - Categórica nominal.-
# 5.2.2: litros_almacenados - Cuantitativa continua.
# 6.2: energia_vivienda - Categórica de respuesta múltiple.-
# VARIABLES ELEGIDAS
# 1.4: cant_integrantes - Cuantitativa discreta.-
# 3.2: max_personas_dormitorio - Cuantitativa discreta.-
# 4.3: tipo_tenencia - Categórica nominal.-
# 4.4.2: costo_alquiler: Cuantitativa continua (intervalo). -
# 5.3: presion_agua - Categórica ordinal.-
# 5.16: agua_caliente_baño - Categórica nominal.-
# 5.2.2: litros_almacenados - Cuantitativa continua.
# 6.2: energia_vivienda - Categórica de respuesta múltiple.-
# 9.5: material_puertas - Categórica de respuesta múltiple.
# 1.4: cant_integrantes - Cuantitativa discreta.-
# 3.2: max_personas_dormitorio - Cuantitativa discreta.-
# 4.3: tipo_tenencia - Categórica nominal.-
# 4.4.2: costo_alquiler: Cuantitativa continua (intervalo). -
# 5.3: presion_agua - Categórica ordinal.-
# 5.16: agua_caliente_baño - Categórica nominal.-
# 5.2.2: litros_almacenados - Cuantitativa continua.
# 6.2: energia_vivienda - Categórica de respuesta múltiple.-
# 9.5: material_puertas - Categórica de respuesta múltiple.
# 9.6: material_paredes - Categórica discreta
# 3.2: max_personas_dormitorio - Cuantitativa discreta.-
# 4.3: tipo_tenencia - Categórica nominal.-
# 4.4.2: costo_alquiler: Cuantitativa continua (intervalo). -
# 5.3: presion_agua - Categórica ordinal.-
# 5.16: agua_caliente_baño - Categórica nominal.-
# 5.2.2: litros_almacenados - Cuantitativa continua.
# 6.2: energia_vivienda - Categórica de respuesta múltiple.-
# 9.5: material_puertas - Categórica de respuesta múltiple.
# 9.6: material_paredes - Categórica discreta
# 9.9: humedad - Categórica de respuesta múltiple
# Relación categórica discreta + cuantitativa discreta: tipo_tenencia + cantidad_personas.
# Relación categórica discreta + cuantitativa discreta: tipo_tenencia + cantidad_personas.
# Relación categórica discreta + categórica discreta: material_pared + humedad
library(tidyverse)
attach(datos_limpios)
# Tabla de frecuencia según cantidad de integrantes de la familia.
tabla_frecuencia_cant_integrantes =
tabyl(datos_limpios$cant_integrantes) %>%
rename(   # Renombro columnas
"Cant. Integrantes" = "datos_limpios$cant_integrantes",
"Frecuencia Absoluta" = n,
"Frecuencia Relativa" = percent
) %>%
adorn_totals() %>%  # Agrego fila de totales
adorn_pct_formatting(digits = 1) # Cant. de decimales en %
tabla_frecuencia_cant_integrantes
# Histograma de cantidad de integrantes por vivienda.
ggplot(datos_limpios) +
aes(x = cant_integrantes, y = ..count../sum(..count..)) +
geom_histogram(fill = "lightgray",
col = "black",
breaks = seq(0, max(datos_limpios$cant_integrantes, na.rm = TRUE) + 1, 1)) +
scale_x_continuous(breaks = function(x) seq(0, max(x), by = 1)) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Cantidad de integrantes",
y = "Frecuencia relativa (%)",
title = "Distribución de integrantes por hogar")
# Medidas resumen por grupo a partir del tipo de vivienda.
datos_limpios %>% group_by(tipo_tenencia) %>%
summarize(cant_integrantes_media = mean(cant_integrantes),
cant_integrantes_ds = sd(cant_integrantes))
# Gráfico de barras de tipo de tenencia de la vivienda.
datos_limpios %>%
count(tipo_tenencia) %>%
mutate(porcentaje = n / sum(n) * 100) %>%
ggplot(aes(
x = reorder(tipo_tenencia, -n),  # Ordenar por frecuencia
y = porcentaje
)) +
geom_bar(
stat = "identity",
fill = "lightgray",
col = "black",
alpha = 0.6,
width = 0.75
) +
geom_text(
aes(label = sprintf("%.1f%%", porcentaje)),
position = position_stack(vjust = 0.5),  # Centrar etiquetas
color = "black",
size = 4
) +
scale_y_continuous(
labels = scales::percent_format(scale = 1),
limits = c(0, 50),  # Límites del eje Y: de 0% a 50%
expand = c(0, 0)    # Elimina espacio extra en los extremos (opcional)
) +
labs(
y = "Porcentaje de viviendas",
x = "Tipo de tenencia",
title = "Distribución del tipo de tenencia de vivienda"
)
library(tidyverse)
attach(datos_limpios)
# Histograma de máxima cantidad de integrantes por dormitorio.
ggplot(datos_limpios) +
aes(x = max_personas_dormitorio, y = ..count../sum(..count..)) +
geom_histogram(fill = "lightgray",
col = "black",
breaks = seq(0, max(datos_limpios$max_personas_dormitorio, na.rm = TRUE) + 1, 1)) +
scale_x_continuous(breaks = function(x) seq(0, max(x), by = 1)) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Máximo de personas por dormitorio",
y = "Frecuencia relativa (%)",
title = "Distribución de personas por dormitorio")
library(tidyverse)
attach(datos_limpios)
# Gráfico de barras de variable categórica en escala nominal: acceso a agua caliente en baños.
datos_limpios %>%
count(agua_caliente_baño) %>%
mutate(porcentaje = n / sum(n) * 100) %>%
ggplot(aes(
x = reorder(agua_caliente_baño, -n),  # Ordenar por frecuencia
y = porcentaje
)) +
geom_bar(
stat = "identity",
fill = "lightgray",
col = "black",
alpha = 0.6,
width = 0.75
) +
geom_text(
aes(label = sprintf("%.1f%%", porcentaje)),
position = position_stack(vjust = 0.5),  # Centrar etiquetas
color = "black",
size = 4
) +
scale_y_continuous(
labels = scales::percent_format(scale = 1),
limits = c(0, 50),  # Límites del eje Y: de 0% a 50%
expand = c(0, 0)    # Elimina espacio extra en los extremos (opcional)
) +
labs(
y = "Porcentaje de viviendas",
x = "Tipo de tenencia",
title = "Acceso a sistemas de agua caliente en baños: % de hogares por tipo"
)
library(tidyverse)
attach(datos_limpios)
# Gráfico de barras de variable categórica ordinal: presión del agua en viviendas.
# 1. Definir orden lógico de las categorías (de mejor a peor presión)
niveles_ordenados <- c("Buena", "Débil", "Muy débil")
# 2. Calcular frecuencias y porcentajes
datos_grafico <- datos_limpios %>%
count(presion_agua) %>%
mutate(
presion_agua = factor(presion_agua, levels = niveles_ordenados),
porcentaje = n / sum(n) * 100
) %>%
arrange(presion_agua)  # Ordenar según niveles definidos
# 3. Gráfico de barras ordenado
ggplot(datos_grafico, aes(x = presion_agua, y = porcentaje, fill = presion_agua)) +
geom_col(width = 0.7, color = "black") +
geom_text(
aes(label = sprintf("%.1f%%", porcentaje)),
vjust = -0.5,  # Posición arriba de la barra
size = 4,
fontface = "bold"
) +
scale_fill_manual(
values = c("Buena" = "#4CAF50", "Débil" = "#FFC107", "Muy débil" = "#F44336"),
guide = "none"  # Oculta la leyenda de colores
) +
labs(
title = "Distribución de la presión del agua en hogares",
x = "Nivel de presión",
y = "Porcentaje de hogares"
) +
theme(
axis.text.x = element_text(size = 11, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")
)
# Gráfico de torta de la variable categórica ordinal: presión del agua
ggplot(datos_grafico, aes(x = "", y = porcentaje, fill = presion_agua)) +
geom_bar(stat = "identity", width = 1, color = "black") +
coord_polar(theta = "y") +  # Convierte el gráfico a torta
geom_text(
aes(label = sprintf("%.1f%%", porcentaje)),
position = position_stack(vjust = 0.5),  # Ubica las etiquetas en el centro de cada segmento
size = 5,
fontface = "bold"
) +
scale_fill_manual(
values = c("Buena" = "#4CAF50", "Débil" = "#FFC107", "Muy débil" = "#F44336"),
guide = "none"  # Oculta la leyenda de colores
) +
labs(
title = "Distribución de la presión del agua en hogares",
x = NULL,
y = NULL
) +
theme(
axis.text.x = element_blank(),  # Elimina los textos del eje x
axis.title.x = element_blank(), # Elimina el título del eje x
axis.title.y = element_blank(), # Elimina el título del eje y
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")
)
# 3. Gráfico de barras ordenado
ggplot(datos_grafico, aes(x = presion_agua, y = porcentaje, fill = presion_agua)) +
geom_col(width = 0.7, color = "black") +
geom_text(
aes(label = sprintf("%.1f%%", porcentaje)),
vjust = -0.5,  # Posición arriba de la barra
size = 4,
fontface = "bold"
) +
scale_fill_manual(
values = c("Buena" = "#4CAF50", "Débil" = "#FFC107", "Muy débil" = "#F44336"),
guide = "none"  # Oculta la leyenda de colores
) +
labs(
title = "Distribución de la presión del agua en hogares",
x = "Nivel de presión",
y = "Porcentaje de hogares"
) +
theme(
axis.text.x = element_text(size = 11, face = "bold"),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")
)
# Visualizar datos.
datos_reducido1 <- datos_limpios %>%
select(   # Seleccionar las columnas que quiero conservar
energia_calefaccion_electricidad,
energia_calefaccion_garrafa,
energia_calefaccion_gas_natural,
energia_calefaccion_leña_carbon,
energia_calefaccion_sin,
energia_calefaccion_no_necesita
)
# Vector con nombres para las barras.
vector_nombres_calefaccion <- c(
energia_calefaccion_gas_natural = "Gas natural",
energia_calefaccion_garrafa = "Garrafa",
energia_calefaccion_electricidad = "Electricidad",
energia_calefaccion_leña_carbon = "Leña / Carbón",
energia_calefaccion_sin = "Sin calefacción",
energia_calefaccion_no_necesita = "No necesita"
)
# Código con nombres. VERIFICAR PORCENTAJES.
datos_limpios %>%
select(all_of(names(vector_nombres_calefaccion))) %>%
summarise(across(everything(), ~sum(. == 1, na.rm = TRUE))) %>%
pivot_longer(cols = everything(), names_to = "tipo_energia", values_to = "n") %>%
mutate(
tipo_energia_nuevo = vector_nombres_calefaccion[tipo_energia],
porcentaje = n / sum(n) * 100
) %>%
ggplot(aes(
x = reorder(tipo_energia_nuevo, -n),
y = porcentaje
)) +
geom_bar(
stat = "identity",
fill = "lightgray",
col = "black",
alpha = 0.6,
width = 0.75
) +
geom_text(
aes(label = sprintf("%.1f%%", porcentaje)),
position = position_stack(vjust = 0.5),
color = "black",
size = 4
) +
scale_y_continuous(
labels = scales::percent_format(scale = 1),
limits = c(0, 45),
expand = c(0, 0)
) +
labs(
x = "Tipo de energía para calefacción",
y = "Porcentaje de viviendas",
title = "Distribución del uso de energía para calefacción"
) +
theme_minimal()
# Conteo de registros para verificar.
conteo_1 <- sum(datos_limpios$energia_calefaccion_leña_carbon == 1, na.rm = TRUE)
# Total de registros no faltantes
total <- sum(!is.na(datos_limpios$max_personas_dormitorio))
# Porcentaje
(conteo_1 / total) * 100
# Tabla de intervalo de precios alquiler
tabla_intervalos <- datos_limpios %>% filter(!is.na(costo_alquiler)) %>%
group_by(costo_alquiler) %>%
summarize(cantidad = n())
ggplot(datos_limpios) +
aes(x = costo_alquiler_num, y = ..count../sum(..count..)) +
geom_histogram(
fill = "lightgray",
col = "black",
breaks = seq(0, 30000, by = 2000)
) +
scale_x_continuous(
breaks = seq(0, 30000, by = 5000),
labels = scales::dollar_format(prefix = "$", big.mark = ".")
) +
scale_y_continuous(labels = scales::percent) +
labs(
x = "Costo de alquiler",
y = "Frecuencia relativa (%)",
title = "Distribución del costo de alquiler"
)
media_costo_alquiler <- mean(datos_limpios$costo_alquiler_num, na.rm = TRUE)
mediana_costo_alquiler <- median(datos_limpios$costo_alquiler_num, na.rm = TRUE)
desvio_costo_alquiler <- sd(datos_limpios$costo_alquiler_num, na.rm = TRUE)
View(datos_grafico)
View(datos_limpios)
View(datos)
